/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as components from "../components";
import * as z from "zod";

export type ChangeActiveStatusSecurity = {
    bearer?: string | undefined;
    apiKey?: string | undefined;
};

export type ChangeActiveStatusRequest = {
    workflowId: string;
    changeWorkflowStatusRequestDto: components.ChangeWorkflowStatusRequestDto;
};

/** @internal */
export namespace ChangeActiveStatusSecurity$ {
    export const inboundSchema: z.ZodType<ChangeActiveStatusSecurity, z.ZodTypeDef, unknown> = z
        .object({
            bearer: z.string().optional(),
            "api-key": z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                "api-key": "apiKey",
            });
        });

    export type Outbound = {
        bearer?: string | undefined;
        "api-key"?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ChangeActiveStatusSecurity> = z
        .object({
            bearer: z.string().optional(),
            apiKey: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                apiKey: "api-key",
            });
        });
}

/** @internal */
export namespace ChangeActiveStatusRequest$ {
    export const inboundSchema: z.ZodType<ChangeActiveStatusRequest, z.ZodTypeDef, unknown> = z
        .object({
            workflowId: z.string(),
            ChangeWorkflowStatusRequestDto:
                components.ChangeWorkflowStatusRequestDto$.inboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                ChangeWorkflowStatusRequestDto: "changeWorkflowStatusRequestDto",
            });
        });

    export type Outbound = {
        workflowId: string;
        ChangeWorkflowStatusRequestDto: components.ChangeWorkflowStatusRequestDto$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ChangeActiveStatusRequest> = z
        .object({
            workflowId: z.string(),
            changeWorkflowStatusRequestDto:
                components.ChangeWorkflowStatusRequestDto$.outboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                changeWorkflowStatusRequestDto: "ChangeWorkflowStatusRequestDto",
            });
        });
}
