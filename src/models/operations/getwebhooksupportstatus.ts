/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

export type GetWebhookSupportStatusSecurity = {
    bearer?: string | undefined;
    apiKey?: string | undefined;
};

export type GetWebhookSupportStatusRequest = {
    providerOrIntegrationId: string;
};

/** @internal */
export namespace GetWebhookSupportStatusSecurity$ {
    export const inboundSchema: z.ZodType<GetWebhookSupportStatusSecurity, z.ZodTypeDef, unknown> =
        z
            .object({
                bearer: z.string().optional(),
                "api-key": z.string().optional(),
            })
            .transform((v) => {
                return remap$(v, {
                    "api-key": "apiKey",
                });
            });

    export type Outbound = {
        bearer?: string | undefined;
        "api-key"?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetWebhookSupportStatusSecurity
    > = z
        .object({
            bearer: z.string().optional(),
            apiKey: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                apiKey: "api-key",
            });
        });
}

/** @internal */
export namespace GetWebhookSupportStatusRequest$ {
    export const inboundSchema: z.ZodType<GetWebhookSupportStatusRequest, z.ZodTypeDef, unknown> =
        z.object({
            providerOrIntegrationId: z.string(),
        });

    export type Outbound = {
        providerOrIntegrationId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetWebhookSupportStatusRequest> =
        z.object({
            providerOrIntegrationId: z.string(),
        });
}
