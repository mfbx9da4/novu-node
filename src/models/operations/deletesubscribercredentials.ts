/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

export type DeleteSubscriberCredentialsSecurity = {
    bearer?: string | undefined;
    apiKey?: string | undefined;
};

export type DeleteSubscriberCredentialsRequest = {
    subscriberId: string;
    providerId: string;
};

/** @internal */
export namespace DeleteSubscriberCredentialsSecurity$ {
    export const inboundSchema: z.ZodType<
        DeleteSubscriberCredentialsSecurity,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            bearer: z.string().optional(),
            "api-key": z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                "api-key": "apiKey",
            });
        });

    export type Outbound = {
        bearer?: string | undefined;
        "api-key"?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        DeleteSubscriberCredentialsSecurity
    > = z
        .object({
            bearer: z.string().optional(),
            apiKey: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                apiKey: "api-key",
            });
        });
}

/** @internal */
export namespace DeleteSubscriberCredentialsRequest$ {
    export const inboundSchema: z.ZodType<
        DeleteSubscriberCredentialsRequest,
        z.ZodTypeDef,
        unknown
    > = z.object({
        subscriberId: z.string(),
        providerId: z.string(),
    });

    export type Outbound = {
        subscriberId: string;
        providerId: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        DeleteSubscriberCredentialsRequest
    > = z.object({
        subscriberId: z.string(),
        providerId: z.string(),
    });
}
