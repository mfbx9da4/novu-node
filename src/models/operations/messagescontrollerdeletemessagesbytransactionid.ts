/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types";
import * as z from "zod";

/**
 * The channel of the message to be deleted
 */
export const QueryParamChannel = {
    InApp: "in_app",
    Email: "email",
    Sms: "sms",
    Chat: "chat",
    Push: "push",
} as const;
/**
 * The channel of the message to be deleted
 */
export type QueryParamChannel = ClosedEnum<typeof QueryParamChannel>;

export type MessagesControllerDeleteMessagesByTransactionIdRequest = {
    /**
     * The channel of the message to be deleted
     */
    channel?: QueryParamChannel | undefined;
    transactionId: string;
};

/** @internal */
export namespace QueryParamChannel$ {
    export const inboundSchema = z.nativeEnum(QueryParamChannel);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace MessagesControllerDeleteMessagesByTransactionIdRequest$ {
    export const inboundSchema: z.ZodType<
        MessagesControllerDeleteMessagesByTransactionIdRequest,
        z.ZodTypeDef,
        unknown
    > = z.object({
        channel: QueryParamChannel$.inboundSchema.optional(),
        transactionId: z.string(),
    });

    export type Outbound = {
        channel?: string | undefined;
        transactionId: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        MessagesControllerDeleteMessagesByTransactionIdRequest
    > = z.object({
        channel: QueryParamChannel$.outboundSchema.optional(),
        transactionId: z.string(),
    });
}
