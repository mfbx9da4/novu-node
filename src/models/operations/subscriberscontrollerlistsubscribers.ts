/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as components from "../components";
import * as z from "zod";

export type SubscribersControllerListSubscribersRequest = {
    page?: number | undefined;
    limit?: number | undefined;
};

export type SubscribersControllerListSubscribersResponseBody = {
    /**
     * The current page of the paginated response
     */
    page: number;
    /**
     * Does the list have more items to fetch
     */
    hasMore: boolean;
    /**
     * Number of items on each page
     */
    pageSize: number;
    data: Array<components.SubscriberResponseDto>;
};

export type SubscribersControllerListSubscribersResponse = {
    result: SubscribersControllerListSubscribersResponseBody;
};

/** @internal */
export namespace SubscribersControllerListSubscribersRequest$ {
    export const inboundSchema: z.ZodType<
        SubscribersControllerListSubscribersRequest,
        z.ZodTypeDef,
        unknown
    > = z.object({
        page: z.number().optional(),
        limit: z.number().default(10),
    });

    export type Outbound = {
        page?: number | undefined;
        limit: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        SubscribersControllerListSubscribersRequest
    > = z.object({
        page: z.number().optional(),
        limit: z.number().default(10),
    });
}

/** @internal */
export namespace SubscribersControllerListSubscribersResponseBody$ {
    export const inboundSchema: z.ZodType<
        SubscribersControllerListSubscribersResponseBody,
        z.ZodTypeDef,
        unknown
    > = z.object({
        page: z.number(),
        hasMore: z.boolean(),
        pageSize: z.number(),
        data: z.array(components.SubscriberResponseDto$.inboundSchema),
    });

    export type Outbound = {
        page: number;
        hasMore: boolean;
        pageSize: number;
        data: Array<components.SubscriberResponseDto$.Outbound>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        SubscribersControllerListSubscribersResponseBody
    > = z.object({
        page: z.number(),
        hasMore: z.boolean(),
        pageSize: z.number(),
        data: z.array(components.SubscriberResponseDto$.outboundSchema),
    });
}

/** @internal */
export namespace SubscribersControllerListSubscribersResponse$ {
    export const inboundSchema: z.ZodType<
        SubscribersControllerListSubscribersResponse,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            Result: z.lazy(() => SubscribersControllerListSubscribersResponseBody$.inboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                Result: "result",
            });
        });

    export type Outbound = {
        Result: SubscribersControllerListSubscribersResponseBody$.Outbound;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        SubscribersControllerListSubscribersResponse
    > = z
        .object({
            result: z.lazy(() => SubscribersControllerListSubscribersResponseBody$.outboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                result: "Result",
            });
        });
}
