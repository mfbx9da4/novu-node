/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as components from "../components";
import * as z from "zod";

export type AddSubscribersSecurity = {
    bearer?: string | undefined;
    apiKey?: string | undefined;
};

export type AddSubscribersRequest = {
    topicKey: string;
    addSubscribersRequestDto: components.AddSubscribersRequestDto;
};

/** @internal */
export namespace AddSubscribersSecurity$ {
    export const inboundSchema: z.ZodType<AddSubscribersSecurity, z.ZodTypeDef, unknown> = z
        .object({
            bearer: z.string().optional(),
            "api-key": z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                "api-key": "apiKey",
            });
        });

    export type Outbound = {
        bearer?: string | undefined;
        "api-key"?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddSubscribersSecurity> = z
        .object({
            bearer: z.string().optional(),
            apiKey: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                apiKey: "api-key",
            });
        });
}

/** @internal */
export namespace AddSubscribersRequest$ {
    export const inboundSchema: z.ZodType<AddSubscribersRequest, z.ZodTypeDef, unknown> = z
        .object({
            topicKey: z.string(),
            AddSubscribersRequestDto: components.AddSubscribersRequestDto$.inboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                AddSubscribersRequestDto: "addSubscribersRequestDto",
            });
        });

    export type Outbound = {
        topicKey: string;
        AddSubscribersRequestDto: components.AddSubscribersRequestDto$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddSubscribersRequest> = z
        .object({
            topicKey: z.string(),
            addSubscribersRequestDto: components.AddSubscribersRequestDto$.outboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                addSubscribersRequestDto: "AddSubscribersRequestDto",
            });
        });
}
