/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

export type ChatOauthCallbackSecurity = {
    apiKey: string;
};

export type ChatOauthCallbackRequest = {
    subscriberId: string;
    providerId: string;
    code: string;
    hmacHash: string;
    environmentId: string;
    integrationIdentifier?: string | undefined;
};

export type ChatOauthCallbackResponseBody = {};

/** @internal */
export namespace ChatOauthCallbackSecurity$ {
    export const inboundSchema: z.ZodType<ChatOauthCallbackSecurity, z.ZodTypeDef, unknown> = z
        .object({
            "api-key": z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                "api-key": "apiKey",
            });
        });

    export type Outbound = {
        "api-key": string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ChatOauthCallbackSecurity> = z
        .object({
            apiKey: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                apiKey: "api-key",
            });
        });
}

/** @internal */
export namespace ChatOauthCallbackRequest$ {
    export const inboundSchema: z.ZodType<ChatOauthCallbackRequest, z.ZodTypeDef, unknown> =
        z.object({
            subscriberId: z.string(),
            providerId: z.string(),
            code: z.string(),
            hmacHash: z.string(),
            environmentId: z.string(),
            integrationIdentifier: z.string().optional(),
        });

    export type Outbound = {
        subscriberId: string;
        providerId: string;
        code: string;
        hmacHash: string;
        environmentId: string;
        integrationIdentifier?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ChatOauthCallbackRequest> =
        z.object({
            subscriberId: z.string(),
            providerId: z.string(),
            code: z.string(),
            hmacHash: z.string(),
            environmentId: z.string(),
            integrationIdentifier: z.string().optional(),
        });
}

/** @internal */
export namespace ChatOauthCallbackResponseBody$ {
    export const inboundSchema: z.ZodType<ChatOauthCallbackResponseBody, z.ZodTypeDef, unknown> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ChatOauthCallbackResponseBody> =
        z.object({});
}
