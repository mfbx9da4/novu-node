/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type TenantPayloadDtoData = {};

export type TenantPayloadDto = {
    identifier?: string | undefined;
    name?: string | undefined;
    data?: TenantPayloadDtoData | undefined;
};

/** @internal */
export namespace TenantPayloadDtoData$ {
    export const inboundSchema: z.ZodType<TenantPayloadDtoData, z.ZodTypeDef, unknown> = z.object(
        {}
    );

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TenantPayloadDtoData> = z.object(
        {}
    );
}

/** @internal */
export namespace TenantPayloadDto$ {
    export const inboundSchema: z.ZodType<TenantPayloadDto, z.ZodTypeDef, unknown> = z.object({
        identifier: z.string().optional(),
        name: z.string().optional(),
        data: z.lazy(() => TenantPayloadDtoData$.inboundSchema).optional(),
    });

    export type Outbound = {
        identifier?: string | undefined;
        name?: string | undefined;
        data?: TenantPayloadDtoData$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TenantPayloadDto> = z.object({
        identifier: z.string().optional(),
        name: z.string().optional(),
        data: z.lazy(() => TenantPayloadDtoData$.outboundSchema).optional(),
    });
}
