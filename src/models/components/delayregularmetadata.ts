/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types";
import * as z from "zod";

export const DelayRegularMetadataType = {
    Regular: "regular",
} as const;
export type DelayRegularMetadataType = ClosedEnum<typeof DelayRegularMetadataType>;

export const Unit = {
    Seconds: "seconds",
    Minutes: "minutes",
    Hours: "hours",
    Days: "days",
    Weeks: "weeks",
    Months: "months",
} as const;
export type Unit = ClosedEnum<typeof Unit>;

export type DelayRegularMetadata = {
    amount?: number | undefined;
    type: DelayRegularMetadataType;
    unit?: Unit | undefined;
};

/** @internal */
export namespace DelayRegularMetadataType$ {
    export const inboundSchema = z.nativeEnum(DelayRegularMetadataType);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace Unit$ {
    export const inboundSchema = z.nativeEnum(Unit);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace DelayRegularMetadata$ {
    export const inboundSchema: z.ZodType<DelayRegularMetadata, z.ZodTypeDef, unknown> = z.object({
        amount: z.number().optional(),
        type: DelayRegularMetadataType$.inboundSchema,
        unit: Unit$.inboundSchema.optional(),
    });

    export type Outbound = {
        amount?: number | undefined;
        type: string;
        unit?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DelayRegularMetadata> = z.object(
        {
            amount: z.number().optional(),
            type: DelayRegularMetadataType$.outboundSchema,
            unit: Unit$.outboundSchema.optional(),
        }
    );
}
