/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type UpdateTenantRequestDtoData = {};

export type UpdateTenantRequestDto = {
    data?: UpdateTenantRequestDtoData | undefined;
    identifier?: string | undefined;
    name?: string | undefined;
};

/** @internal */
export namespace UpdateTenantRequestDtoData$ {
    export const inboundSchema: z.ZodType<UpdateTenantRequestDtoData, z.ZodTypeDef, unknown> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateTenantRequestDtoData> =
        z.object({});
}

/** @internal */
export namespace UpdateTenantRequestDto$ {
    export const inboundSchema: z.ZodType<UpdateTenantRequestDto, z.ZodTypeDef, unknown> = z.object(
        {
            data: z.lazy(() => UpdateTenantRequestDtoData$.inboundSchema).optional(),
            identifier: z.string().optional(),
            name: z.string().optional(),
        }
    );

    export type Outbound = {
        data?: UpdateTenantRequestDtoData$.Outbound | undefined;
        identifier?: string | undefined;
        name?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateTenantRequestDto> =
        z.object({
            data: z.lazy(() => UpdateTenantRequestDtoData$.outboundSchema).optional(),
            identifier: z.string().optional(),
            name: z.string().optional(),
        });
}
