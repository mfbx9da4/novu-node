/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types";
import * as z from "zod";

export const DelayScheduledMetadataType = {
    Scheduled: "scheduled",
} as const;
export type DelayScheduledMetadataType = ClosedEnum<typeof DelayScheduledMetadataType>;

export type DelayScheduledMetadata = {
    type: DelayScheduledMetadataType;
    delayPath: string;
};

/** @internal */
export namespace DelayScheduledMetadataType$ {
    export const inboundSchema = z.nativeEnum(DelayScheduledMetadataType);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace DelayScheduledMetadata$ {
    export const inboundSchema: z.ZodType<DelayScheduledMetadata, z.ZodTypeDef, unknown> = z.object(
        {
            type: DelayScheduledMetadataType$.inboundSchema,
            delayPath: z.string(),
        }
    );

    export type Outbound = {
        type: string;
        delayPath: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DelayScheduledMetadata> =
        z.object({
            type: DelayScheduledMetadataType$.outboundSchema,
            delayPath: z.string(),
        });
}
