/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    IPartnerConfigurationResponseDto,
    IPartnerConfigurationResponseDto$,
} from "./ipartnerconfigurationresponsedto";
import {
    OrganizationBrandingResponseDto,
    OrganizationBrandingResponseDto$,
} from "./organizationbrandingresponsedto";
import * as z from "zod";

export type OrganizationResponseDto = {
    name: string;
    logo?: string | undefined;
    branding: OrganizationBrandingResponseDto;
    partnerConfigurations?: Array<IPartnerConfigurationResponseDto> | undefined;
};

/** @internal */
export namespace OrganizationResponseDto$ {
    export const inboundSchema: z.ZodType<OrganizationResponseDto, z.ZodTypeDef, unknown> =
        z.object({
            name: z.string(),
            logo: z.string().optional(),
            branding: OrganizationBrandingResponseDto$.inboundSchema,
            partnerConfigurations: z
                .array(IPartnerConfigurationResponseDto$.inboundSchema)
                .optional(),
        });

    export type Outbound = {
        name: string;
        logo?: string | undefined;
        branding: OrganizationBrandingResponseDto$.Outbound;
        partnerConfigurations?: Array<IPartnerConfigurationResponseDto$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, OrganizationResponseDto> =
        z.object({
            name: z.string(),
            logo: z.string().optional(),
            branding: OrganizationBrandingResponseDto$.outboundSchema,
            partnerConfigurations: z
                .array(IPartnerConfigurationResponseDto$.outboundSchema)
                .optional(),
        });
}
