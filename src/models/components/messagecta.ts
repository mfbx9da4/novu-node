/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types";
import { MessageAction, MessageAction$ } from "./messageaction";
import { MessageCTAData, MessageCTAData$ } from "./messagectadata";
import * as z from "zod";

export const MessageCTAType = {
    Redirect: "redirect",
} as const;
export type MessageCTAType = ClosedEnum<typeof MessageCTAType>;

export type MessageCTA = {
    action?: MessageAction | undefined;
    data: MessageCTAData;
    type?: MessageCTAType | undefined;
};

/** @internal */
export namespace MessageCTAType$ {
    export const inboundSchema = z.nativeEnum(MessageCTAType);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace MessageCTA$ {
    export const inboundSchema: z.ZodType<MessageCTA, z.ZodTypeDef, unknown> = z.object({
        action: MessageAction$.inboundSchema.optional(),
        data: MessageCTAData$.inboundSchema,
        type: MessageCTAType$.inboundSchema.optional(),
    });

    export type Outbound = {
        action?: MessageAction$.Outbound | undefined;
        data: MessageCTAData$.Outbound;
        type?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MessageCTA> = z.object({
        action: MessageAction$.outboundSchema.optional(),
        data: MessageCTAData$.outboundSchema,
        type: MessageCTAType$.outboundSchema.optional(),
    });
}
