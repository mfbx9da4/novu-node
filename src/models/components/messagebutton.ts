/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types";
import * as z from "zod";

export const MessageButtonType = {
    Primary: "primary",
    Secondary: "secondary",
    Clicked: "clicked",
} as const;
export type MessageButtonType = ClosedEnum<typeof MessageButtonType>;

export type MessageButton = {
    type: MessageButtonType;
    content: string;
    resultContent?: string | undefined;
};

/** @internal */
export namespace MessageButtonType$ {
    export const inboundSchema = z.nativeEnum(MessageButtonType);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace MessageButton$ {
    export const inboundSchema: z.ZodType<MessageButton, z.ZodTypeDef, unknown> = z.object({
        type: MessageButtonType$.inboundSchema,
        content: z.string(),
        resultContent: z.string().optional(),
    });

    export type Outbound = {
        type: string;
        content: string;
        resultContent?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MessageButton> = z.object({
        type: MessageButtonType$.outboundSchema,
        content: z.string(),
        resultContent: z.string().optional(),
    });
}
