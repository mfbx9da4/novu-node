/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type CreateTenantRequestDtoData = {};

export type CreateTenantRequestDto = {
    data?: CreateTenantRequestDtoData | undefined;
    identifier: string;
    name: string;
};

/** @internal */
export namespace CreateTenantRequestDtoData$ {
    export const inboundSchema: z.ZodType<CreateTenantRequestDtoData, z.ZodTypeDef, unknown> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTenantRequestDtoData> =
        z.object({});
}

/** @internal */
export namespace CreateTenantRequestDto$ {
    export const inboundSchema: z.ZodType<CreateTenantRequestDto, z.ZodTypeDef, unknown> = z.object(
        {
            data: z.lazy(() => CreateTenantRequestDtoData$.inboundSchema).optional(),
            identifier: z.string(),
            name: z.string(),
        }
    );

    export type Outbound = {
        data?: CreateTenantRequestDtoData$.Outbound | undefined;
        identifier: string;
        name: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTenantRequestDto> =
        z.object({
            data: z.lazy(() => CreateTenantRequestDtoData$.outboundSchema).optional(),
            identifier: z.string(),
            name: z.string(),
        });
}
