/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type UpdateSubscriberRequestDtoData = {};

export type UpdateSubscriberRequestDto = {
    avatar?: string | undefined;
    data?: UpdateSubscriberRequestDtoData | undefined;
    email?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    locale?: string | undefined;
    phone?: string | undefined;
};

/** @internal */
export namespace UpdateSubscriberRequestDtoData$ {
    export const inboundSchema: z.ZodType<UpdateSubscriberRequestDtoData, z.ZodTypeDef, unknown> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateSubscriberRequestDtoData> =
        z.object({});
}

/** @internal */
export namespace UpdateSubscriberRequestDto$ {
    export const inboundSchema: z.ZodType<UpdateSubscriberRequestDto, z.ZodTypeDef, unknown> =
        z.object({
            avatar: z.string().optional(),
            data: z.lazy(() => UpdateSubscriberRequestDtoData$.inboundSchema).optional(),
            email: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            locale: z.string().optional(),
            phone: z.string().optional(),
        });

    export type Outbound = {
        avatar?: string | undefined;
        data?: UpdateSubscriberRequestDtoData$.Outbound | undefined;
        email?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        locale?: string | undefined;
        phone?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateSubscriberRequestDto> =
        z.object({
            avatar: z.string().optional(),
            data: z.lazy(() => UpdateSubscriberRequestDtoData$.outboundSchema).optional(),
            email: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            locale: z.string().optional(),
            phone: z.string().optional(),
        });
}
