/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types";
import { MessageActionResult, MessageActionResult$ } from "./messageactionresult";
import { MessageButton, MessageButton$ } from "./messagebutton";
import * as z from "zod";

export const MessageActionStatus = {
    Pending: "pending",
    Done: "done",
} as const;
export type MessageActionStatus = ClosedEnum<typeof MessageActionStatus>;

export type MessageAction = {
    buttons?: Array<MessageButton> | undefined;
    result?: MessageActionResult | undefined;
    status?: MessageActionStatus | undefined;
};

/** @internal */
export namespace MessageActionStatus$ {
    export const inboundSchema = z.nativeEnum(MessageActionStatus);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace MessageAction$ {
    export const inboundSchema: z.ZodType<MessageAction, z.ZodTypeDef, unknown> = z.object({
        buttons: z.array(MessageButton$.inboundSchema).optional(),
        result: MessageActionResult$.inboundSchema.optional(),
        status: MessageActionStatus$.inboundSchema.optional(),
    });

    export type Outbound = {
        buttons?: Array<MessageButton$.Outbound> | undefined;
        result?: MessageActionResult$.Outbound | undefined;
        status?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MessageAction> = z.object({
        buttons: z.array(MessageButton$.outboundSchema).optional(),
        result: MessageActionResult$.outboundSchema.optional(),
        status: MessageActionStatus$.outboundSchema.optional(),
    });
}
