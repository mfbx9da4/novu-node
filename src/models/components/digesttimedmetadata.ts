/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types";
import { TimedConfig, TimedConfig$ } from "./timedconfig";
import * as z from "zod";

export const DigestTimedMetadataUnit = {
    Seconds: "seconds",
    Minutes: "minutes",
    Hours: "hours",
    Days: "days",
    Weeks: "weeks",
    Months: "months",
} as const;
export type DigestTimedMetadataUnit = ClosedEnum<typeof DigestTimedMetadataUnit>;

export const DigestTimedMetadataType = {
    Timed: "timed",
} as const;
export type DigestTimedMetadataType = ClosedEnum<typeof DigestTimedMetadataType>;

export type DigestTimedMetadata = {
    amount?: number | undefined;
    unit?: DigestTimedMetadataUnit | undefined;
    digestKey?: string | undefined;
    type: DigestTimedMetadataType;
    timed?: TimedConfig | undefined;
};

/** @internal */
export namespace DigestTimedMetadataUnit$ {
    export const inboundSchema = z.nativeEnum(DigestTimedMetadataUnit);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace DigestTimedMetadataType$ {
    export const inboundSchema = z.nativeEnum(DigestTimedMetadataType);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace DigestTimedMetadata$ {
    export const inboundSchema: z.ZodType<DigestTimedMetadata, z.ZodTypeDef, unknown> = z.object({
        amount: z.number().optional(),
        unit: DigestTimedMetadataUnit$.inboundSchema.optional(),
        digestKey: z.string().optional(),
        type: DigestTimedMetadataType$.inboundSchema,
        timed: TimedConfig$.inboundSchema.optional(),
    });

    export type Outbound = {
        amount?: number | undefined;
        unit?: string | undefined;
        digestKey?: string | undefined;
        type: string;
        timed?: TimedConfig$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DigestTimedMetadata> = z.object({
        amount: z.number().optional(),
        unit: DigestTimedMetadataUnit$.outboundSchema.optional(),
        digestKey: z.string().optional(),
        type: DigestTimedMetadataType$.outboundSchema,
        timed: TimedConfig$.outboundSchema.optional(),
    });
}
